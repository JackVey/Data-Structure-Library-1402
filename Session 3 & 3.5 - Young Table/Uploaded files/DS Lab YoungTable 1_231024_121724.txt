class YoungTable {
   int A[]
   int size
   int row, col

   // Constructor( A , row , col ) { size = row * col; ... }
   idx2rc ( k )   // return (i, j) 
   rc2idx ( i, j ) // return k

   int getAt(i, j)  // return a_ij
   setAt(i, j, x)     // a_ij = x

   siftDown(i, j)  // maintain the Young table if a_ij get decreased by swapping to the correct position in the Young table

   buildYoungTable() {
       for i= row-1 downto 0
           for j=col-1 downto 0
               siftDown(i, j)
    }
}

Main
   Let A be an array of size = row.col initialized by random integers
   YoungTable z = new YoungTable( A, row, col )
   z.buildYoungTable()
   for i=0 to row-1
       for j=0 to col-1
           print(z.getAt(i, j))
       print('\n')